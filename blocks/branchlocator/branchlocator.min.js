import{fetchPlaceholders as v,getMetadata as b}from"../../scripts/aem.min.js";import{branchURLStr as y,CFApiCall as L}from"../../scripts/scripts.min.js";import{dropDownStateCity as x,locateMeClick as S,onloadBranchLocator as C}from"./branchlocator-biz.min.js";import{setLocationObj as l}from"./branchlocator-init.min.js";export function branchLocator_dropdown(t){return`<div class='container dropdown-container'> 
                                <div class='dropdown-wrapper'>

                                    <div class='state-dropdown dropdown dropdown-li-logic'>
                                        <div class='dropdown-selectvalue default-state-selected'> Maharashtra </div>
                                        <ul class='state-vlaue-option dropdown-option-wrapper state-wrapper dp-none'>
                                            <input type='text' placeholder='State' id='search' class="search-input"/>
                                             <div class='option-wrapper'>
                                             </div>
                                        </ul>
                                    </div>

                                    <div class='city-dropdown dropdown dropdown-li-logic'>
                                        <div class='dropdown-selectvalue default-city-selected'> Mumbai </div>
                                        <ul class='city-vlaue-option dropdown-option-wrapper city-wrapper dp-none'>
                                            <input type='text' placeholder='City' id='search' class="search-input"/>
                                            <div class='option-wrapper'>
                                            </div>
                                        </ul>
                                    </div>

                                </div>
                          </div>`}export function branchLocator_Map(t,a){return`<div class='container map-container-wrapper mt-30 mob-mt-15'>

                        <div class='map-branchinfo-wrapper'>

                            <div class='branch-info-container'>
                                 <p class="nearest-txt">${a.nearesttext}</p> 
                                 <div class="branch-deatils dp-none"> 
                                    <p class="branch-addr"></p>
                                    <p class="branch-distance"></p>
                                 </div>
                                    <button class="btn-locate"><img src='/images/location-pointer.svg' class="locate-me-img" alt="locate-me-img">
                                    <span>${a.locatetext}</span>
                                    </button>
                                 <a class="btn-locate-details dp-none">${a.branchdetailstext}</a>
                            </div>

                            <div class='map-container'><div>

                        </div>
                    </div>
                    `}export function branchLocator(){return`<div class='cards-branches cards-branches-container mt-45 mb-40 mob-mb-45'>
            <div class='title'>
                 <h2 class="title-to-show"></h2> 
            </div>

            <div class='cards-container'>

                    <div class='cards-wrapper branch-list-wrapper'>

                            

                    </div>

            </div>
        </div>`}export async function innerBranchFunc(t){let a="";const r=await v();return t.forEach(e=>{const s=e.State,c=e.City,d=e["Location Code"],n=e.Location;a+=`<div class='card-box'>
              <h3 class='card-title'> ${e.Location} </h3>
              <p class='card-address'>${e.Address}</p>
              <p class='card-gmail'> <span> <img src='/images/gmail.svg' alt='gmail-icon'/> </span> ${r.branchlocatorgmail} </p> 
              <a href="${y(n,c,s,"loans",d)}" id='more-details-btn'>${r.moredetailtext}  </a> 
            </div>`}),a}export default async function $(t){const a=await v(),r=Array.from(t.children,n=>n.firstElementChild),[e]=r,s=e.textContent.trim(),d=(await L(s))?.data;sessionStorage.getItem("data")?l.getExcelData=JSON.parse(sessionStorage.getItem("data")):(l.getExcelData=x(d),sessionStorage.setItem("data",JSON.stringify(l.getExcelData))),t.innerHTML=branchLocator_dropdown(t),t.innerHTML+=branchLocator_Map(t,a),t.innerHTML+=branchLocator(),C(t),S(t),M(t)}function M(t){const{state:a,city:r}=l.geoInfo;if(!a)return;const e=(o,i=!1)=>{const p=o.toLowerCase().replace(/\s+/g,"-");return i?p.charAt(0).toUpperCase()+p.slice(1):p},s=e(a),c=e(a,!0),n='<span class="breadcrumb-separator"><svg width="6" height="10" viewBox="0 0 6 10" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M1 9.00195L4.29293 5.70902C4.68182 5.32013 4.68182 4.68377 4.29293 4.29488L1 1.00195" stroke-miterlimit="10" stroke-linecap="round" stroke-linejoin="round"></path></svg></span>',m=[`<a href="${b("primary-language-path")}/branch-locator/${s}">${c}</a>`];if(r){const o=e(r),i=e(r,!0);m.push(`<a href="${b("primary-language-path")}/branch-locator/${s}/${o}">${i}</a>`)}const g=m.map(o=>`${n}${o}`).join("");t.closest("body").querySelector(".breadcrumb nav").insertAdjacentHTML("beforeend",g);let w=t.closest("body").querySelectorAll(".breadcrumb nav a");const h=[];w.forEach((o,i)=>{h.push({"@type":"ListItem",position:i+1,name:o.textContent,item:location.origin+o.getAttribute("href")})});let f={"@context":"https://schema.org","@type":"BreadcrumbList",itemListElement:h};const u=document.createElement("script");u.type="application/ld+json",u.innerHTML=JSON.stringify(f)}
