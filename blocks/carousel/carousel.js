import{body as q,createCarousle as w,targetObject as I}from"../../scripts/scripts.js";import"../applyloanform/applyloanforms.min.js";import"../applyloanform/loanformapi.min.js";import"../applyloanform/loanutm.js";import"../applyloanform/statemasterapi.min.js";import"../applyloanform/validation.min.js";import{generateDetailedTeaserDOM as T}from"../detailed-teaser/detailed-teaser.js";import{generateTeaserDOM as N}from"../teaser/teaser.min.js";import"./glider.min.js";const m={};m["detailed-teaser"]=T,m["ss-teaser"]=T;function P(e){e.forEach(i=>{if(i.isIntersecting){const o=i.target.parentNode.parentNode.lastChild;[...o.querySelectorAll(":scope button")].forEach(d=>d.classList.remove("selected")),o.querySelector(`:scope button[data-panel='${i.target.dataset.panel}']`).classList.add("selected")}})}const B=new IntersectionObserver(P,{threshold:.6,rootMargin:"500px 0px"});export default function G(e){const i=document.createElement("div");i.classList.add("panel-container","carousel-inner"),i.id="carouselInner";const o=document.createElement("div");o.classList.add("button-container");const d=document.createElement("div");d.classList.add("carousel-navigation-buttons"),d.innerHTML=`
    <button type="button" class="slide-prev glider-prev" aria-label="Previous Slide">${e.children[0].outerHTML||"<"}</button>
    <button type="button" class="slide-next glider-next" aria-label="Next Slide">${e.children[1].outerHTML||">"}</button>
  `;const O=e.children[2].innerText.trim()||"primary",M=e.children[3].innerText.trim()||"rotate-off",f=e.children[4].innerText.trim()||"One",$=e.children[5].innerText.trim()||"",L=I.isMobile||f==="One",x=M==="rotate-on";e.classList.add(O,f);const v=Array.from(e.children).slice(6);[...v].forEach((t,a)=>{const[l,s,c,...r]=t.children,b=r[r.length-2].textContent.trim(),E=r[r.length-1].textContent.trim(),y=c.textContent.trim(),u=(y?y.split(","):[]).map(n=>n&&n.trim()).filter(n=>!!n);let S="teaser",p=null;if(u.forEach(n=>{m[n]&&(S=n,p=m[n])}),p=p?p([l,s,...r],u):N([l,s,...r],u),t.textContent="",t.classList.add(S,"block","carousel-item"),u.forEach(n=>t.classList.add(n.trim())),t.dataset.panel=`panel_${a}`,t.append(p),b&&(t.style.backgroundColor=b),E&&(t.style.backgroundImage=E),i.append(t),v.length>1){const n=document.createElement("button");o.append(n),n.title=`Slide ${a+1}`,n.dataset.panel=`panel_${a}`,v[a].classList.forEach(C=>{["teaser","block","carousel-item"].includes(C)||n.classList.add(C)}),a||n.classList.add("selected"),f==="Glider"||L&&B.observe(t),n.addEventListener("click",()=>{i.scrollTo({top:0,left:t.offsetLeft-t.parentNode.offsetLeft,behavior:"smooth"})})}}),e.textContent="",e.append(i),e.append(d);const g=e.querySelector(".slide-prev"),h=e.querySelector(".slide-next");if(f==="Glider"){const t=JSON.parse($);t.arrows={},t.arrows.prev=g,t.arrows.next=h,t.dots=o,e.append(o),new IntersectionObserver(l=>{l.forEach(s=>{s.isIntersecting&&new Glider(i,t)})}).observe(e)}else if(L){let t=function(s){i.scrollTo({top:0,left:s.offsetLeft-s.parentNode.offsetLeft,behavior:"smooth"})},a=function(){const s=o.querySelector(".selected"),r=e.querySelector(`[data-panel=${s.dataset.panel}]`).previousElementSibling;r&&t(r)},l=function(){const s=o.querySelector(".selected"),c=e.querySelector(`[data-panel=${s.dataset.panel}]`);if(x){const r=c.nextElementSibling?c.nextElementSibling:e.querySelector("[data-panel");r&&t(r)}else{const r=c.nextElementSibling;r&&t(r)}};g?.addEventListener("click",s=>{a()}),h.addEventListener("click",s=>{l()}),o.children.length&&(e.append(o),x&&setInterval(()=>{q.style.overflowY!="hidden"&&l()},7e3))}else o.children.length&&(e.append(o),w(e,g,h))}
