import{body as M,createCarousle as $,targetObject as I}from"../../scripts/scripts.min.js";import"../applyloanform/applyloanforms.min.js";import"../applyloanform/loanformapi.min.js";import"../applyloanform/loanutm.min.js";import"../applyloanform/statemasterapi.min.js";import"../applyloanform/validation.min.js";import{generateDetailedTeaserDOM as C}from"../detailed-teaser/detailed-teaser.min.js";import{generateTeaserDOM as N}from"../teaser/teaser.min.js";import"./glider.min.min.js";const m={};m["detailed-teaser"]=C,m["ss-teaser"]=C;function P(t){t.forEach(i=>{if(i.isIntersecting){const o=i.target.parentNode.parentNode.lastChild;[...o.querySelectorAll(":scope button")].forEach(d=>d.classList.remove("selected")),o.querySelector(`:scope button[data-panel='${i.target.dataset.panel}']`).classList.add("selected")}})}const A=new IntersectionObserver(P,{threshold:.6,rootMargin:"500px 0px"});export default function B(t){try{if(window.location.pathname==="/personal-loan"&&window.location.search){const e=t.querySelector("a"),l=document.querySelector(".camp-btn").querySelector("a"),s=new URL(e.href);e.href=s.origin+s.pathname+window.location.search,l.href=s.origin+s.pathname+window.location.search}}catch(e){console.warn(e)}const i=document.createElement("div");i.classList.add("panel-container","carousel-inner"),i.id="carouselInner";const o=document.createElement("div");o.classList.add("button-container");const d=document.createElement("div");d.classList.add("carousel-navigation-buttons"),d.innerHTML=`
    <button type="button" class="slide-prev glider-prev" aria-label="Previous Slide">${t.children[0].outerHTML||"<"}</button>
    <button type="button" class="slide-next glider-next" aria-label="Next Slide">${t.children[1].outerHTML||">"}</button>
  `;const T=t.children[2].innerText.trim()||"primary",q=t.children[3].innerText.trim()||"rotate-off",f=t.children[4].innerText.trim()||"One",O=t.children[5].innerText.trim()||"",L=I.isMobile||f==="One",x=q==="rotate-on";t.classList.add(T,f);const h=Array.from(t.children).slice(6);[...h].forEach((e,l)=>{const[s,a,c,...r]=e.children,y=r[r.length-2].textContent.trim(),S=r[r.length-1].textContent.trim(),b=c.textContent.trim(),u=(b?b.split(","):[]).map(n=>n&&n.trim()).filter(n=>!!n);let E="teaser",p=null;if(u.forEach(n=>{m[n]&&(E=n,p=m[n])}),p=p?p([s,a,...r],u):N([s,a,...r],u),e.textContent="",e.classList.add(E,"block","carousel-item"),u.forEach(n=>e.classList.add(n.trim())),e.dataset.panel=`panel_${l}`,e.append(p),y&&(e.style.backgroundColor=y),S&&(e.style.backgroundImage=S),i.append(e),h.length>1){const n=document.createElement("button");o.append(n),n.title=`Slide ${l+1}`,n.dataset.panel=`panel_${l}`,h[l].classList.forEach(w=>{["teaser","block","carousel-item"].includes(w)||n.classList.add(w)}),l||n.classList.add("selected"),f==="Glider"||L&&A.observe(e),n.addEventListener("click",()=>{i.scrollTo({top:0,left:e.offsetLeft-e.parentNode.offsetLeft,behavior:"smooth"})})}}),t.textContent="",t.append(i),t.append(d);const v=t.querySelector(".slide-prev"),g=t.querySelector(".slide-next");if(f==="Glider"){const e=JSON.parse(O);e.arrows={},e.arrows.prev=v,e.arrows.next=g,e.dots=o,t.append(o),new IntersectionObserver(s=>{s.forEach(a=>{a.isIntersecting&&new Glider(i,e)})}).observe(t)}else if(L){let e=function(a){i.scrollTo({top:0,left:a.offsetLeft-a.parentNode.offsetLeft,behavior:"smooth"})},l=function(){const a=o.querySelector(".selected"),r=t.querySelector(`[data-panel=${a.dataset.panel}]`).previousElementSibling;r&&e(r)},s=function(){const a=o.querySelector(".selected"),c=t.querySelector(`[data-panel=${a.dataset.panel}]`);if(x){const r=c.nextElementSibling?c.nextElementSibling:t.querySelector("[data-panel");r&&e(r)}else{const r=c.nextElementSibling;r&&e(r)}};v?.addEventListener("click",a=>{l()}),g.addEventListener("click",a=>{s()}),o.children.length&&(t.append(o),x&&setInterval(()=>{M.style.overflowY!="hidden"&&s()},7e3))}else o.children.length&&(t.append(o),$(t,v,g))}
