import{fetchAPI as s}from"../../scripts/common.min.js;let r;const c="AIzaSyDx1HwnCLjSSIm_gADqaYAZhSBh7hgcwTQ";export async function getSelectedLanguage(e="",n="/api/neeyat-muti-lang.json"){r||(r=await(await s("GET",n)).json());const t=r.data.filter(a=>e.toLowerCase()===a.language.toLowerCase());return t.length?t[0]:r.data.filter(a=>a.language==="english")[0]}export default function g(){return new Promise((e,n)=>{"geolocation"in navigator?navigator.geolocation.getCurrentPosition(t=>{locationInLatLan.lat=t.coords.latitude,locationInLatLan.lng=t.coords.longitude,e(locationInLatLan)},t=>{e(t),console.error("Error getting user location:",t)}):console.error("Geolocation is not supported by this browser.")})}function l(e,n){return new Promise((t,a)=>{s("GET",`https://maps.googleapis.com/maps/api/geocode/json?latlng=${e},${n}&sensor=true&key=${c}`).then(o=>{t(o)}).catch(o=>{t(o)})})}export let locationInLatLan={lat:"",lng:""};export async function getLanguageByLocation(){return new Promise((e,n)=>{g().then(()=>{l(locationInLatLan.lat,locationInLatLan.lng).then(async t=>{t=await t.json();let a=t.results[0].address_components.filter(i=>{if(i.types.includes("administrative_area_level_1"))return i.long_name});a=a[0].long_name.toLowerCase();const o=t.results[t.results.length-1].formatted_address;e({location:a,countryName:o})}).catch(t=>{e(t)})}).catch(t=>{e(t)})})}export async function getLanguageByState(){const n=await(await s("GET","/api/language-by-state.json"))?.json(),t={};return n?.data.forEach(a=>{t[a.state]=a.language}),t}
