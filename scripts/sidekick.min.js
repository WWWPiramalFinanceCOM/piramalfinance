async function a(e,t,n){const i=await fetch(`https://admin.hlx.page/sidekick/${e}/${t}/${n}/env.json`);return!i||!i.ok?null:(await i.json())?.contentSourceUrl}async function d(e){const{owner:t,repo:n,ref:i}=e.detail.data.config,o=await a(t,n,i);if(!o){console.error("Content source URL not found");return}const{pathname:r}=window.location,l=`${o}${r}?cmd=open`;window.open(l,"_blank")}async function u(e,t){let n=e.shadowRoot.querySelector(t);return new Promise(i=>{const o=()=>{n=e.shadowRoot.querySelector(t),n?i(n):setTimeout(o,100)};o()})}function c(e){const[t]=e.classList;return["edit","reload","publish","delete","unpublish"].indexOf(t)!==-1}async function s(e){const t=await u(e,".plugin-container");t.style.visibility="hidden",t.querySelectorAll(".plugin").forEach(n=>{c(n)&&(n.style.display="none")}),new MutationObserver(n=>{n.forEach(i=>i.addedNodes.forEach(o=>{c(o)&&(o.style.display="none")}))}).observe(t,{childList:!0}),t.style.visibility="visible",e.addEventListener("custom:aemedit",d)}export async function initSidekick(){let e=document.querySelector("helix-sidekick");e?await s(e):document.addEventListener("sidekick-ready",async()=>{e=document.querySelector("helix-sidekick"),await s(e)},{once:!0})}
